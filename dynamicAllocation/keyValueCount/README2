Classwork 9, Problem 1
=======================

As we mentioned in the c09/README file, p1 will be to:

  - read the key/value pairs from a file
  - free the memory for the key/value pairs

To start with this problem, you are going to want to define two structs, in the
file kv.h.  The first one (struct _kvpair_t) should define the structure for
one key/value pair.   The second should define the structure for an 
array of key/value pairs (hint: you will want to include the lenght of the
array in this structure).

Now you will want to write the four functions in kv.c.  

In readKVs, you will want to open the file, read the lines of text, split them into
key/value pairs, add the resulting pairs to an array (hint: realloc it to make it larger
each time), close the file, and return the kvarray_t * that has your array.

Remember that you will want to abstract out complex steps into functions (you should
see at least 2 pieces to naturally pull out into their own functions).

Next, you will write freeKVs, which should free all the memory allocated by readKVs.
That is,  freeKVs(readKVs(filename)) should not leak any memory.

Third, write printKVs which should take a kvarray_t *, and print out

 "key = '%s' value = '%s'\n"
for each key/value pair in the array, with the first %s being whatever the key is,
and the second being whatever value (e.g., key = 'Jean Luc Picard' value = 'Captain').

Finally, write the lookupValue function, which takes a kvarray_t * and a char * (string).
The char * that is passed in represents a key.  This function searches the kvarray_t 
for a matching key, and if found, returns the corresponding value.  If no match is found,
this function returns NULL.

Once you complete these functions, test them using the main in kv_test.c before
proceeding to p2.


 
